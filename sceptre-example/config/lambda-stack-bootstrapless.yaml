# This is an example of deploying the CDK stack using the "bootstrapless" deployment_type. This is
# the more "Sceptre-like" way to configure your stacks. You can "wire together" other stacks into
# this one using resolvers to populate values in the bootstrapless_config, parameters, and
# sceptre_user_data. By default, the profile or role doing the deployments will also be used to push
# the file and image assets.
template:
    type: cdk
    # The path is always within your project's templates/ directory.
    path: lambda_stack.py
    deployment_type: bootstrapless
    # bootstrapless_config are the snake_cased arguments passed to the cdk-bootstrapless-synthesizer
    # for definitions of possible parameters, see the API docs here:
    # https://github.com/aws-samples/cdk-bootstrapless-synthesizer/blob/main/API.md
    bootstrapless_config:
        # You can use !stack_attr to reference other stack attributes that happen
        # to be set with resolvers to chain the resolver value.
        file_asset_bucket_name: !stack_attr template_bucket_name
        file_asset_prefix: {{template_key_prefix}}/cdk-assets
        image_asset_repository_name: !stack_output ecr.yaml::RepoName
    # You can explicitly define your stack name
    class_name: MyLambdaStack
    # You can also pass CDK context key/value pairs. If you don't specify a context, the default
    # context will be used (as determined by CDK).
    context:
      # CDK feature flags
      '@aws-cdk/aws-lambda:recognizeLayerVersion': true
      '@aws-cdk/core:checkSecretUsage': true
      '@aws-cdk/core:target-partitions':
        - aws
        - aws-cn
      '@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver': true
      '@aws-cdk/aws-ec2:uniqueImdsv2TemplateName': true
      '@aws-cdk/aws-ecs:arnFormatIncludesClusterName': true
      '@aws-cdk/aws-iam:minimizePolicies': true
      '@aws-cdk/core:validateSnapshotRemovalPolicy': true
      '@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName': true
      '@aws-cdk/aws-s3:createDefaultLoggingPolicy': true
      '@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption': true
      '@aws-cdk/aws-apigateway:disableCloudWatchRole': true
      '@aws-cdk/core:enablePartitionLiterals': true
      '@aws-cdk/aws-events:eventsTargetQueueSameAccount': true
      '@aws-cdk/aws-iam:standardizedServicePrincipals': true
      '@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker': true

# Parameters are DEPLOY-TIME values passed to the CloudFormation template. Your CDK stack construct
# needs to have CfnParameters in order to support this, though.
parameters:
    SpecialEnv: "This is my Sceptre test"

# sceptre_user_data is passed to your Stack Class's constructor for supplying values at COMPILE-TIME.
sceptre_user_data:
    special_variable: "use this directly at compile_time"
